{"version":3,"sources":["Components/useInterval.js","Components/Item.js","App.js","reportWebVitals.js","index.js"],"names":["useInterval","callback","delay","clear","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","App","props","useState","left","setLeft","speed","setSpeed","award","setAward","press","setPressed","isInitialMount","item","spaceBetweenElements","index","elementPosition","takeFromChildShow","price","takeIntoInventory","reset","offsetLeft","setResetBtnfromChild","className","ref","style","position","top","Array","map","Math","floor","random","order","setPress","show","setShow","setReset","setItem","resetBtn","SetresetBtn","randomSpeed","bool","winningItem","setTimeout","type","onClick","disabled","Item","bind","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5985c0a2.chunk.js","sourcesContent":["import { useEffect, useRef } from \"react\";\r\n\r\nfunction useInterval(callback, delay, clear) {\r\n  const savedCallback = useRef();\r\n\r\n  // Remember the latest function.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n\r\n  useEffect(() => {\r\n    if (clear) return;\r\n\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay, clear]);\r\n}\r\n\r\nexport default useInterval;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport useInterval from \"./useInterval\";\r\n\r\nconst App = (props) => {\r\n  const [left, setLeft] = useState(-100);\r\n  const [speed, setSpeed] = useState(props.speed);\r\n  const [award, setAward] = useState(false);\r\n  const [press, setPressed] = useState(false);\r\n  const isInitialMount = useRef(true);\r\n  const item = useRef(null);\r\n  let spaceBetweenElements = props.index * 220;\r\n  let elementPosition = left + spaceBetweenElements;\r\n\r\n  let accelleration = 0.0009;\r\n\r\n  useEffect(() => {\r\n    if (elementPosition >= 27 && elementPosition <= 195 && award) {\r\n      props.takeFromChildShow(props.price);\r\n    }\r\n  }, [award]);\r\n\r\n  useEffect(() => {\r\n    setLeft(-100);\r\n    props.takeIntoInventory();\r\n    setSpeed(props.speed);\r\n    setAward(false);\r\n  }, [props.reset]);\r\n\r\n  useEffect(() => {\r\n    if (isInitialMount.current) {\r\n      isInitialMount.current = false;\r\n    } else {\r\n      setPressed(true);\r\n    }\r\n  }, [props.press]);\r\n\r\n  useInterval(\r\n    () => {\r\n      if (item.current.offsetLeft < -150) {\r\n        setLeft(950 - spaceBetweenElements);\r\n      } else {\r\n        setLeft(left - speed);\r\n        if (speed > 0.01) {\r\n          setSpeed(speed - (accelleration + 0.05));\r\n        } else {\r\n          setAward(true);\r\n          setPressed(false);\r\n          if (elementPosition >= 27 && elementPosition <= 195) {\r\n          } else {\r\n            props.setResetBtnfromChild(false);\r\n          }\r\n        }\r\n      }\r\n    },\r\n    20,\r\n    !press\r\n  );\r\n\r\n  let checkTheWinningElement = () => {\r\n    if (elementPosition >= 27 && elementPosition <= 195 && award) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"item\"\r\n      ref={item}\r\n      style={{\r\n        position: \"absolute\",\r\n        left: `${elementPosition}px`,\r\n        top: checkTheWinningElement() ? `10px` : ``,\r\n      }}\r\n    >\r\n      <span>{props.price}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import \"./Styles/MainBuild/Main.css\";\nimport Item from \"./Components/Item\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [order] = useState(\n    /*     Array.from({ length: 4 }, () => Math.floor(Math.random() * 1000)) */\n    [...Array(6)].map(() => {\n      return Math.floor(Math.random() * 1000);\n    })\n  );\n  const [press, setPress] = useState(false);\n  const [show, setShow] = useState(false);\n  const [reset, setReset] = useState(true);\n  const [item, setItem] = useState(null);\n  const [resetBtn, SetresetBtn] = useState(true);\n\n  let randomSpeed = Math.floor(Math.random() * 20 + 4);\n\n  let setResetBtnfromChild = (bool) => {\n    SetresetBtn(bool);\n  };\n\n  let spin = () => {\n    setPress((press) => !press);\n  };\n\n  let takeFromChildShow = (winningItem) => {\n    setTimeout(() => {\n      setShow(true);\n    }, 500);\n    setItem(winningItem);\n  };\n\n  let takeIntoInventory = () => {\n    SetresetBtn(true);\n    setShow(false);\n    setReset((reset) => !reset);\n  };\n\n  return (\n    <div className=\"App\">\n      {show ? (\n        <div className=\"WinningModal\">\n          <div className=\"WinningAnimation\">\n            <div className=\"WinningHead pt-3\">\n              <span className=\"WinningNumber\">{item}</span>\n            </div>\n            <div className=\"WinningBody\">\n              <button\n                type=\"button\"\n                className=\"btn btn-outline-primary btn-lg WinningBtn mt-5\"\n                onClick={takeIntoInventory}\n              >\n                Take\n              </button>\n            </div>\n          </div>\n        </div>\n      ) : null}\n      <div className=\"Content\">\n        <button\n          type=\"button\"\n          className=\"btn btn-primary SpinBtn\"\n          onClick={takeIntoInventory}\n          disabled={resetBtn ? \"true\" : \"\"}\n        >\n          Reset\n        </button>\n\n        <div className=\"box\">\n          <div className=\"Line\"></div>\n          <div className=\"AwardModal\"></div>\n          <div className=\"VisibleBlock\">\n            {order.map((item, index) => {\n              return (\n                <Item\n                  reset={reset}\n                  price={item}\n                  index={index}\n                  order={order}\n                  press={press}\n                  speed={randomSpeed}\n                  takeFromChildShow={takeFromChildShow.bind(this)}\n                  takeIntoInventory={takeIntoInventory}\n                  setResetBtnfromChild={setResetBtnfromChild}\n                />\n              );\n            })}\n          </div>\n        </div>\n\n        <div className=\"Block\">\n          <button\n            type=\"button\"\n            className=\"btn btn-primary SpinBtn\"\n            onClick={spin}\n          >\n            Spin\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}